apply plugin: 'maven-publish'

def GROUP_ID = "com.github.XiongKe94"
def ARTIFACT_ID = "YouTubeView"
def VERSION = "1.0.0"
def pomName = "${GROUP_ID}-${ARTIFACT_ID}-${VERSION}"

project.afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = GROUP_ID
                //建议和github仓库名称对应，否则对jitpack无效
                artifactId = ARTIFACT_ID
                //建议和release的tag相同，否则对jitpack无效
                version = VERSION
                artifacts {
                    archives androidSourcesJar
                    archives androidJavadocsJar
                }

                println " upload finish pomName =  ${pomName}"
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    excludes = ['**/*.kt']
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    enabled = false
}